<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>cern.c2mon</groupId>
    <artifactId>c2mon</artifactId>
    <version>1.8.40-SNAPSHOT</version>
  </parent>

  <groupId>cern.c2mon.daq</groupId>
  <artifactId>c2mon-daq-parent</artifactId>
  <packaging>pom</packaging>

  <modules>
    <module>c2mon-daq-core</module>
    <module>c2mon-daq-test</module>
    <module>distribution</module>
  </modules>

  <properties>
    <docker.image.base>java:8-jdk</docker.image.base>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- Internal C2MON dependencies -->
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-core</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-test</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-common</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-daq</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-util</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-distribution-parent</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <!--
          Configuration to unpack c2mon-daq-distribution-parent so that DAQ
          implementations can use the resources inside it
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>unpack</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <artifactItems>
              <artifactItem>
                <groupId>cern.c2mon.daq</groupId>
                <artifactId>c2mon-daq-distribution-parent</artifactId>
                <version>${project.parent.version}</version>
                <overWrite>true</overWrite>
                <outputDirectory>${project.build.directory}/distribution</outputDirectory>
              </artifactItem>
            </artifactItems>
          </configuration>
        </plugin>

        <!-- Generic tarball configuration -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <descriptors>
                  <descriptor>${project.build.directory}/distribution/tar/assembly.xml</descriptor>
                </descriptors>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Generic docker image configuration -->
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.4.10</version>
          <executions>
            <execution>
              <id>build-image</id>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
            <execution>
              <id>push-image</id>
              <phase>deploy</phase>
              <goals>
                <goal>push</goal>
              </goals>
              <configuration>
                <imageName>gitlab-registry.cern.ch/c2mon/${project.artifactId}</imageName>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <imageName>gitlab-registry.cern.ch/c2mon/${project.artifactId}</imageName>
            <baseImage>${docker.image.base}</baseImage>
            <serverId>gitlab-registry.cern.ch</serverId>
            <registryUrl>https://gitlab-registry.cern.ch</registryUrl>
            <forceTags>true</forceTags>
            <imageTags>
              <imageTag>${project.version}</imageTag>
            </imageTags>
            <workdir>/${project.artifactId}</workdir>
            <entryPoint>["/docker-entrypoint.sh"]</entryPoint>
            <exposes>
              <expose>1099</expose>
            </exposes>
            <runs>
              <run>chmod 755 /docker-entrypoint.sh</run>
              <run>chmod 755 /${project.artifactId}/bin/*</run>
              <run>apt-get install -y --no-install-recommends xz-utils</run> <!--lsof command-not-found-->
              <run>rm -rf /var/lib/apt/lists/*</run>
            </runs>
            <env>
              <basedir>${project.artifactId}</basedir>
              <LD_LIBRARY_PATH>/${project.artifactId}/lib_so</LD_LIBRARY_PATH>
              <C2MON_DAQ_JMS_URL>tcp://0.0.0.0:61616</C2MON_DAQ_JMS_URL>
            </env>
            <volumes>
              <volume>/${project.artifactId}/log</volume>
              <volume>/${project.artifactId}/conf</volume>
            </volumes>
            <resources>
              <resource>
                <directory>${project.build.directory}</directory>
                <include>${project.artifactId}-${project.version}-dist.tar.gz</include>
                <targetPath>/${project.artifactId}</targetPath>
              </resource>
              <resource>
                <directory>${project.build.directory}/distribution/docker/conf</directory>
                <targetPath>/${project.artifactId}/conf</targetPath>
              </resource>
              <resource>
                <directory>${project.build.directory}/distribution/docker</directory>
                <includes>
                  <include>docker-entrypoint.sh</include>
                </includes>
                <targetPath>/</targetPath>
              </resource>
            </resources>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

