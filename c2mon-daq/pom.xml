<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>cern.c2mon</groupId>
    <artifactId>c2mon</artifactId>
    <version>1.9.3-SNAPSHOT</version>
  </parent>

  <groupId>cern.c2mon.daq</groupId>
  <artifactId>c2mon-daq-parent</artifactId>
  <packaging>pom</packaging>

  <modules>
    <module>c2mon-daq-core</module>
    <module>c2mon-daq-test</module>
  </modules>

  <profiles>
    <profile>
      <id>ci-deploy</id>
      <modules>
        <module>c2mon-daq-core</module>
        <module>c2mon-daq-test</module>
        <module>distribution</module>
      </modules>
    </profile>
  </profiles>

  <distributionManagement>
     <repository>
       <id>c2mon-releases</id>
       <url>${repository.releases.url}</url>
     </repository>
     <snapshotRepository>
       <id>c2mon-releases</id>
       <url>${repository.snapshots.url}</url>
     </snapshotRepository>
  </distributionManagement>


  <properties>
    <image.base>java:8-jdk</image.base>
    <image.name>${project.artifactId}</image.name>
    <registry>registry.hub.docker.com</registry>
    <repository>cern/c2mon-daq</repository>
    <daq.home>/${project.artifactId}-${project.version}</daq.home>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>javax.jms-api</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- Internal C2MON dependencies -->
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-core</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-test</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-common</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-daq</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.shared</groupId>
        <artifactId>c2mon-shared-util</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>cern.c2mon.daq</groupId>
        <artifactId>c2mon-daq-distribution-parent</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <!--
          Configuration to unpack c2mon-daq-distribution-parent so that DAQ
          implementations can use the resources inside it
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
          <executions>
            <execution>
              <id>unpack</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <artifactItems>
              <artifactItem>
                <groupId>cern.c2mon.daq</groupId>
                <artifactId>c2mon-daq-distribution-parent</artifactId>
                <version>${project.parent.version}</version>
                <overWrite>true</overWrite>
                <outputDirectory>${project.build.directory}/distribution</outputDirectory>
              </artifactItem>
            </artifactItems>
          </configuration>
        </plugin>

        <!-- Generic tarball configuration -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <descriptors>
                  <descriptor>${project.build.directory}/distribution/tar/assembly.xml</descriptor>
                </descriptors>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <phase>install</phase>
              <configuration>
                <target>
                  <gunzip src="${project.build.directory}/${project.artifactId}-${project.version}-dist.tar.gz" />
                  <untar src="${project.build.directory}/${project.artifactId}-${project.version}-dist.tar" dest="${project.build.directory}/distribution${daq.home}" />
                  <copy todir="${project.build.directory}/distribution${daq.home}" overwrite="true">
                    <fileset dir="${project.build.directory}/distribution/tar" />
                    <fileset dir="${project.build.directory}/distribution/docker" />
                  </copy>
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>1.0.2</version>
          <executions>
            <execution>
              <phase>deploy</phase>
              <id>build</id>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <from>
              <image>${image.base}</image>
            </from>
            <to>
              <image>${registry}/${repository}</image>
              <tags>
                <tag>${project.artifactId}-${project.version}</tag>
              </tags>
            </to>
            <container>
              <useCurrentTimestamp>true</useCurrentTimestamp>
              <ports>
                <port>1099</port>
              </ports>
              <workingDirectory>${daq.home}</workingDirectory>
              <entrypoint>
                <entrypoint>./docker-entrypoint.sh</entrypoint>
                <entrypoint>bin/C2MON-DAQ-STARTUP.jvm</entrypoint>
              </entrypoint>
              <environment>
                <basedir>${project.artifactId}</basedir>
                <LD_LIBRARY_PATH>/${project.artifactId}/lib_so</LD_LIBRARY_PATH>
                <C2MON_DAQ_JMS_URL>tcp://0.0.0.0:61616</C2MON_DAQ_JMS_URL>
                <DAQ_HOME>${daq.home}</DAQ_HOME>
              </environment>
              <volumes>
                <volume>/log</volume>
                <volume>/conf</volume>
              </volumes>
            </container>
            <extraDirectory>
              <path>${project.build.directory}/distribution</path>
              <permissions>
                <permission>
                  <file>${daq.home}/bin/C2MON-DAQ-STARTUP.jvm</file>
                  <mode>755</mode>
                </permission>
                <permission>
                  <file>${daq.home}/bin/daqprocess.sh</file>
                  <mode>755</mode>
                </permission>
                <permission>
                  <file>${daq.home}/docker-entrypoint.sh</file>
                  <mode>755</mode>
                </permission>
              </permissions>
            </extraDirectory>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>
</project>

